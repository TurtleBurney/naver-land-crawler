"""empty message

Revision ID: b1e305e5c537
Revises: 05934f1eabd4
Create Date: 2022-03-13 02:59:38.205566

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b1e305e5c537"
down_revision = "05934f1eabd4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "building",
        sa.Column("building_id", sa.String(length=50), nullable=False),
        sa.Column("building_name", sa.String(length=50), nullable=False),
        sa.Column(
            "building_type",
            sa.Enum("APT", "OPT", name="building_type_enum"),
            nullable=False,
        ),
        sa.Column("dong_count", sa.Integer(), nullable=False),
        sa.Column("household_count", sa.Integer(), nullable=False),
        sa.Column("approval_date", sa.Date(), nullable=False),
        sa.Column("lowest_floor", sa.Integer(), nullable=False),
        sa.Column("highest_floor", sa.Integer(), nullable=False),
        sa.Column("land_address", sa.String(length=100), nullable=False),
        sa.Column("road_address", sa.String(length=100), nullable=False),
        sa.Column("deal_count", sa.Integer(), nullable=True),
        sa.Column("jeonse_count", sa.Integer(), nullable=True),
        sa.Column("wolse_count", sa.Integer(), nullable=True),
        sa.Column("fk_region_code", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["fk_region_code"], ["region.region_code"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("building_id"),
    )
    op.drop_table("price")
    op.execute("DROP TYPE sale_type_enum")
    op.drop_table("household")
    op.drop_table("building_detail")
    op.drop_table("building_basic")
    op.execute("DROP TYPE building_code_enum_1")
    op.create_table(
        "household",
        sa.Column("household_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dong", sa.Integer(), nullable=False),
        sa.Column("floor", sa.Integer(), nullable=False),
        sa.Column("direction", sa.String(length=10), nullable=False),
        sa.Column("area", sa.Float(), nullable=False),
        sa.Column("link", sa.String(length=200), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("building_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("household_id"),
    )
    op.create_table(
        "contract_price",
        sa.Column(
            "contract_price_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column(
            "contract_type",
            sa.Enum("Deal", "Jeonse", "Wolse", name="contract_type_enum"),
            nullable=False,
        ),
        sa.Column("min_price", sa.String(length=10), nullable=False),
        sa.Column("max_price", sa.String(length=10), nullable=False),
        sa.Column("wolse_price", sa.String(length=10), nullable=True),
        sa.Column("fk_house_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["fk_house_id"], ["household.household_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("contract_price_id"),
    )

    op.add_column(
        "household", sa.Column("building_dong", sa.String(length=10), nullable=False)
    )
    op.add_column("household", sa.Column("supply_area", sa.Float(), nullable=False))
    op.add_column("household", sa.Column("private_area", sa.Float(), nullable=False))
    op.add_column(
        "household", sa.Column("household_url", sa.String(length=200), nullable=False)
    )
    op.add_column(
        "household", sa.Column("fk_building_id", sa.String(length=50), nullable=True)
    )
    op.create_foreign_key(
        None,
        "household",
        "building",
        ["fk_building_id"],
        ["building_id"],
        ondelete="CASCADE",
    )
    op.drop_column("household", "area")
    op.drop_column("household", "link")
    op.drop_column("household", "dong")
    op.drop_column("household", "building_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "household",
        sa.Column("building_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "household",
        sa.Column("dong", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "household",
        sa.Column("link", sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    )
    op.add_column(
        "household",
        sa.Column(
            "area",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint("household_fk_building_id_fkey", "household", type_="foreignkey")
    op.drop_column("household", "fk_building_id")
    op.drop_column("household", "household_url")
    op.drop_column("household", "private_area")
    op.drop_column("household", "supply_area")
    op.drop_column("household", "building_dong")

    op.drop_table("contract_price")
    op.execute("DROP TYPE contract_type_enum")
    op.drop_table("household")
    op.create_table(
        "building_basic",
        sa.Column(
            "building_id",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('building_basic_building_id_seq'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "building_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column(
            "building_type",
            postgresql.ENUM("A1", "B1", "B2", name="building_code_enum_1"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "region_code", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["region_code"],
            ["region.region_code"],
            name="building_basic_region_code_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("building_id", name="building_basic_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "building_detail",
        sa.Column("building_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("total_household", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("lowest_floor", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("highest_floor", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("approval_date", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("total_dong", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "number_address",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "road_address", sa.VARCHAR(length=100), autoincrement=False, nullable=False
        ),
        sa.Column("total_deal", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("total_jeonse", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("total_wolse", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("building_id", name="building_detail_pkey"),
    )
    op.create_table(
        "household",
        sa.Column("household_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dong", sa.Integer(), nullable=False),
        sa.Column("floor", sa.Integer(), nullable=False),
        sa.Column("direction", sa.String(length=10), nullable=False),
        sa.Column("area", sa.Float(), nullable=False),
        sa.Column("link", sa.String(length=200), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("building_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["building_id"], ["building_basic.building_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("household_id"),
    )
    op.create_table(
        "price",
        sa.Column("price_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "sale_type",
            postgresql.ENUM("Deal", "Jeonse", "Wolse", name="sale_type_enum"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("default_price", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("highest_price", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("wolse_price", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("house_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["house_id"],
            ["household.household_id"],
            name="price_house_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("price_id", name="price_pkey"),
    )
    op.drop_table("building")
    op.execute("DROP TYPE building_type_enum")
    # ### end Alembic commands ###
